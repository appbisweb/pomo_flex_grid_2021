//Equal Height for Columns
.v_center [class^="col"]  > *,
.eq_height [class^="col"]  > * {
  min-height: 100%;
}

.eq_height [class^="col"]  > *,
.v_center [class^="col"] > * {
  display: flex;
	align-items: center;
}

.h_center > * {
  justify-content: center;
}

.h_start > * {
  justify-content: flex-start;
}

.h_end > * {
  justify-content: flex-end;
  align-items: flex-end;
}


.left {
  text-align: left;
  margin-right: auto;

  > * {
    justify-content: flex-start;
    align-items: flex-start;
  }
}

.center {
  text-align: center;
  margin-left: auto;
  margin-right: auto;

  > * { 
    justify-content: center;
    align-items: center;
  }
}

.right {
  text-align: right;
  margin-left: auto;

  > * {
    justify-content: flex-end;
    align-items: flex-end;
  }
}


.aw_push_down_last > div {
  display: flex;
  flex-direction: column;
  align-items: center;

  > *:nth-last-child(2) {
    flex-grow: 1;
    margin-top: auto;
  }
}

//Reverse and Custom Collapse Order
$order_number: 1, 2, 3, 4, 5, 6;
@include mq($until: medium) {
  .aw_container .aw_row.reverse_md {
    flex-direction: column-reverse;
  }
  
  .aw_container .aw_row > *:not([class*="md"]) {
    @each $order in $order_number {
      &.order#{$order} { order: $order; }
    }
  }
}

@include mq($until: small) {
  .aw_container .aw_row.reverse_sm {
    flex-direction: column-reverse;
  }

  .aw_container .aw_row > *:not([class*="sm"]) {
    @each $order in $order_number {
      &.order#{$order} { order: $order; }
    }
  }
}
